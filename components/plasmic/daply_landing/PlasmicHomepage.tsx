// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: e2Wrjg6Dz94BkfogsCYoEo
// Component: trPESwWzhIQ

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import { NavigationBar } from "@plasmicpkgs/plasmic-nav";
import Button from "../../Button"; // plasmic-import: dBCQUhJCSZs2/component
import SignUpPrompt from "../../SignUpPrompt"; // plasmic-import: NOJgg_Sy_SDB/component
import Section from "../../Section"; // plasmic-import: Rmg4dgTCPBXZ/component
import ValueProp from "../../ValueProp"; // plasmic-import: b8UA6WVbb5xL/component
import PriceCard from "../../PriceCard"; // plasmic-import: g3CxlUrNVWAd/component
import Banner from "../../Banner"; // plasmic-import: -2zftpqT-X-k/component
import { AntdAccordion } from "@plasmicpkgs/antd5/skinny/registerCollapse";
import { accordionHelpers as AntdAccordion_Helpers } from "@plasmicpkgs/antd5/skinny/registerCollapse";
import { AntdAccordionItem } from "@plasmicpkgs/antd5/skinny/registerCollapse";
import { ParallaxWrapper } from "@plasmicpkgs/react-scroll-parallax";
import Testimonial from "../../Testimonial"; // plasmic-import: RF-Yj1fkCKhf/component
import CallToActionSection from "../../CallToActionSection"; // plasmic-import: JbYIy_ldO41D/component
import FooterSection from "../../FooterSection"; // plasmic-import: 7rGOkW3yxftm/component

import { useScreenVariants as useScreenVariantseatfCtt4BrEn } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: eatfCTT4BrEN/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: e2Wrjg6Dz94BkfogsCYoEo/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: trPESwWzhIQ/css

import AppleIcon from "./icons/PlasmicIcon__Apple"; // plasmic-import: 563f33iyx-K3/icon
import ChevronRightIcon from "./icons/PlasmicIcon__ChevronRight"; // plasmic-import: HEPvTyIN4GhK/icon
import CheckIcon from "./icons/PlasmicIcon__Check"; // plasmic-import: nEIP81smXuD5/icon

createPlasmicElementProxy;

export type PlasmicHomepage__VariantMembers = {};
export type PlasmicHomepage__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepage__VariantsArgs;
export const PlasmicHomepage__VariantProps = new Array<VariantPropType>();

export type PlasmicHomepage__ArgsType = {};
type ArgPropType = keyof PlasmicHomepage__ArgsType;
export const PlasmicHomepage__ArgProps = new Array<ArgPropType>();

export type PlasmicHomepage__OverridesType = {
  root?: Flex__<"div">;
  navigationBar?: Flex__<typeof NavigationBar>;
  signup?: Flex__<typeof Button>;
  headerHeroSection?: Flex__<"div">;
  signUpPrompt?: Flex__<typeof SignUpPrompt>;
  valuePropsSection?: Flex__<typeof Section>;
  pricingSection?: Flex__<typeof Section>;
  shopBannersSection?: Flex__<typeof Section>;
  logoCloudSection?: Flex__<typeof Section>;
  faqSection?: Flex__<typeof Section>;
  accordion2?: Flex__<typeof AntdAccordion>;
  scrollParallax?: Flex__<typeof ParallaxWrapper>;
  testimonialsSection?: Flex__<typeof Section>;
  callToActionSection?: Flex__<typeof CallToActionSection>;
  footerSection?: Flex__<typeof FooterSection>;
};

export interface DefaultHomepageProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicHomepage__RenderFunc(props: {
  variants: PlasmicHomepage__VariantsArgs;
  args: PlasmicHomepage__ArgsType;
  overrides: PlasmicHomepage__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = useCurrentUser?.() || {};

  const stateSpecs: Parameters<typeof useDollarState>[0] = React.useMemo(
    () => [
      {
        path: "accordion2.activePanelId",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        onMutate: generateOnMutateForSpec(
          "activePanelId",
          AntdAccordion_Helpers
        )
      }
    ],
    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantseatfCtt4BrEn()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
        <title key="title">{PlasmicHomepage.pageMetadata.title}</title>
        <meta
          key="og:title"
          property="og:title"
          content={PlasmicHomepage.pageMetadata.title}
        />
        <meta
          key="twitter:title"
          name="twitter:title"
          content={PlasmicHomepage.pageMetadata.title}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            plasmic_plasmic_rich_components_css.plasmic_tokens,
            sty.root
          )}
        >
          <div
            className={classNames(
              projectcss.all,
              sty.freeBox__j2Phk,
              "top-nav"
            )}
            id={"topNav"}
          >
            <NavigationBar
              data-plasmic-name={"navigationBar"}
              data-plasmic-override={overrides.navigationBar}
              brand={
                <PlasmicLink__
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__mz2Uh
                  )}
                  component={Link}
                  href={"#"}
                  platform={"nextjs"}
                >
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__phWf3)}
                    displayHeight={"40px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"none"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    src={{
                      src: "/plasmic/daply_landing/images/daplyLogoBlackpng.png",
                      fullWidth: 540,
                      fullHeight: 190,
                      aspectRatio: undefined
                    }}
                  />
                </PlasmicLink__>
              }
              className={classNames("__wab_instance", sty.navigationBar)}
              closeButton={
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__phYiz)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"none"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  src={"https://static1.plasmic.app/close.svg"}
                />
              }
              itemsGap={8}
              menuItems={
                <React.Fragment>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__oDxd
                    )}
                    component={Link}
                    href={"/"}
                    platform={"nextjs"}
                  >
                    {"Home"}
                  </PlasmicLink__>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__n1ANg
                    )}
                    component={Link}
                    href={"/"}
                    platform={"nextjs"}
                  >
                    {"About"}
                  </PlasmicLink__>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__yifF3
                    )}
                    component={Link}
                    href={"/"}
                    platform={"nextjs"}
                  >
                    {"Contact"}
                  </PlasmicLink__>
                  <Button
                    data-plasmic-name={"signup"}
                    data-plasmic-override={overrides.signup}
                    className={classNames("__wab_instance", sty.signup)}
                    color2={"blue"}
                    onClick={async event => {
                      const $steps = {};

                      $steps["updateStateVariable"] = true
                        ? (() => {
                            const actionArgs = {};
                            return (({
                              variable,
                              value,
                              startIndex,
                              deleteCount
                            }) => {
                              if (!variable) {
                                return;
                              }
                              const { objRoot, variablePath } = variable;
                              undefined;
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["updateStateVariable"] != null &&
                        typeof $steps["updateStateVariable"] === "object" &&
                        typeof $steps["updateStateVariable"].then === "function"
                      ) {
                        $steps["updateStateVariable"] = await $steps[
                          "updateStateVariable"
                        ];
                      }
                    }}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___5H2Md
                      )}
                    >
                      {"Open App"}
                    </div>
                  </Button>
                </React.Fragment>
              }
              openButton={
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img___7VUb)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"none"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  src={"https://static1.plasmic.app/menu.svg"}
                />
              }
              responsiveBreakpoint={768}
            />
          </div>
          <Stack__
            as={"div"}
            data-plasmic-name={"headerHeroSection"}
            data-plasmic-override={overrides.headerHeroSection}
            hasGap={true}
            className={classNames(projectcss.all, sty.headerHeroSection)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns___9DKaa)}
            >
              <div className={classNames(projectcss.all, sty.column__o5I62)}>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___0NcGo)}
                >
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__b3WXc)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__rlBey)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__rOaoc
                        )}
                      >
                        {"Updated!"}
                      </div>
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__au9Ub
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{"Scale your content "}</React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ textDecoration: "underline" }}
                        >
                          {"production"}
                        </span>
                      </React.Fragment>
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___7S0Dh
                      )}
                    >
                      {
                        "We make it easy to aggregate information and tailor highly specific content to meet your needs. "
                      }
                    </div>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__hvz1X)}
                  >
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__lzcTl
                      )}
                      color2={"darkGray"}
                      endIcon={
                        <ChevronRightIcon
                          className={classNames(projectcss.all, sty.svg___1BU3)}
                          role={"img"}
                        />
                      }
                      showEndIcon={true}
                      submitsForm={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___0MlbS
                        )}
                      >
                        {"Start now"}
                      </div>
                    </Button>
                    <Button
                      bgDifference={true}
                      className={classNames(
                        "__wab_instance",
                        sty.button__iZdsi
                      )}
                      color2={"darkGray"}
                      submitsForm={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__h4Z76
                        )}
                      >
                        {"Learn more\u2026"}
                      </div>
                    </Button>
                  </Stack__>
                </Stack__>
              </div>
              <div className={classNames(projectcss.all, sty.column___240P)}>
                <SignUpPrompt
                  data-plasmic-name={"signUpPrompt"}
                  data-plasmic-override={overrides.signUpPrompt}
                  className={classNames("__wab_instance", sty.signUpPrompt)}
                />
              </div>
            </Stack__>
          </Stack__>
          <Section
            data-plasmic-name={"valuePropsSection"}
            data-plasmic-override={overrides.valuePropsSection}
            background={"gray"}
            className={classNames("__wab_instance", sty.valuePropsSection)}
            size={"fullContentWidth"}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__mY8)}
            >
              <div className={classNames(projectcss.all, sty.freeBox__p9KU)}>
                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2__mKMsT
                  )}
                >
                  {"Proposing values"}
                </h2>
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__ox0E9
                )}
              >
                {
                  "Consectetur a adipiscing sagittis sed proin libero himenaeos ornare adipiscing suscipit leo vestibulum facilisi consequat nisi nisi adipiscing habitant facilisis suspendisse hac integer eget quam facilisis sem placerat fames."
                }
              </div>
            </Stack__>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__oq1Jg)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__ipoZy)}
              >
                <ValueProp
                  className={classNames("__wab_instance", sty.valueProp__mwUfr)}
                  description={
                    "Nulla odio mauris enim parturient adipiscing vestibulum inceptos."
                  }
                  flatIcon={true}
                  icon={
                    <CheckIcon
                      className={classNames(projectcss.all, sty.svg__umOWr)}
                      role={"img"}
                    />
                  }
                  title={"Aggregate Data Sources"}
                  vertical={true}
                />

                <ValueProp
                  className={classNames("__wab_instance", sty.valueProp__yqk44)}
                  description={
                    "Consequat scelerisque a eros taciti nisl a sodales."
                  }
                  icon={
                    <CheckIcon
                      className={classNames(projectcss.all, sty.svg__dbmRu)}
                      role={"img"}
                    />
                  }
                  title={"Scale Content"}
                  vertical={true}
                />

                <ValueProp
                  className={classNames("__wab_instance", sty.valueProp__hx62Z)}
                  description={"At ut condimentum amet adipiscing ac diam a."}
                  icon={
                    <CheckIcon
                      className={classNames(projectcss.all, sty.svg__eBiWy)}
                      role={"img"}
                    />
                  }
                  title={"Increase Ad Revenue"}
                  vertical={true}
                />

                <ValueProp
                  className={classNames("__wab_instance", sty.valueProp__wxb7N)}
                  description={
                    "Donec purus nec vestibulum volutpat vivamus vulputate suspendisse."
                  }
                  flatIcon={true}
                  icon={
                    <CheckIcon
                      className={classNames(projectcss.all, sty.svg__jv1F)}
                      role={"img"}
                    />
                  }
                  title={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__vCzxf
                      )}
                    >
                      {"Increase your Ad Revenue and Funnels"}
                    </div>
                  }
                  vertical={true}
                />
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__zq5T)}
              >
                <ValueProp
                  className={classNames("__wab_instance", sty.valueProp__yjTwu)}
                  description={
                    "Nulla odio mauris enim parturient adipiscing vestibulum inceptos."
                  }
                  flatIcon={true}
                  icon={
                    <CheckIcon
                      className={classNames(projectcss.all, sty.svg___7DtZ)}
                      role={"img"}
                    />
                  }
                  title={"Manage Original Content Pipelines"}
                  vertical={true}
                />

                <ValueProp
                  className={classNames("__wab_instance", sty.valueProp__loN9S)}
                  description={
                    "Consequat scelerisque a eros taciti nisl a sodales."
                  }
                  icon={
                    <CheckIcon
                      className={classNames(projectcss.all, sty.svg__kRioP)}
                      role={"img"}
                    />
                  }
                  title={"Customized AI eLearning"}
                  vertical={true}
                />

                <ValueProp
                  className={classNames("__wab_instance", sty.valueProp__ipgG)}
                  description={"At ut condimentum amet adipiscing ac diam a."}
                  icon={
                    <CheckIcon
                      className={classNames(projectcss.all, sty.svg___372Eh)}
                      role={"img"}
                    />
                  }
                  title={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__l9K7F
                      )}
                    >
                      {"Increase Traffic"}
                    </div>
                  }
                  vertical={true}
                />

                <ValueProp
                  className={classNames("__wab_instance", sty.valueProp__rnFhB)}
                  description={
                    "Donec purus nec vestibulum volutpat vivamus vulputate suspendisse."
                  }
                  flatIcon={true}
                  icon={
                    <CheckIcon
                      className={classNames(projectcss.all, sty.svg__kV5Pd)}
                      role={"img"}
                    />
                  }
                  title={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__kZgY
                      )}
                    >
                      {"Become Domain Authority"}
                    </div>
                  }
                  vertical={true}
                />
              </Stack__>
            </Stack__>
          </Section>
          <Section
            data-plasmic-name={"pricingSection"}
            data-plasmic-override={overrides.pricingSection}
            background={"dark"}
            className={classNames("__wab_instance", sty.pricingSection)}
          >
            <h2
              className={classNames(
                projectcss.all,
                projectcss.h2,
                projectcss.__wab_text,
                sty.h2__sAJxS
              )}
            >
              {"Pricing"}
            </h2>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox___5Mj2O)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__mUzUu)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__zWrAo
                  )}
                >
                  {
                    "Nascetur nascetur ridiculus scelerisque adipiscing a nascetur varius sed eu a ad semper a est nec litora ante at orci rhoncus a varius auctor aliquam inceptos vestibulum ridiculus."
                  }
                </div>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns__je1Mw)}
              >
                <div className={classNames(projectcss.all, sty.column__j7KG3)}>
                  <PriceCard
                    borders={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? []
                        : ["flatRight"]
                    }
                    className={classNames(
                      "__wab_instance",
                      sty.priceCard__lFa6H
                    )}
                    description={
                      <React.Fragment>
                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__yNyhD
                          )}
                          description={
                            "Vestibulum mollis odio dictum ultrices facilisis molestie vestibulum"
                          }
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__re2Rz
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__u04V
                          )}
                          description={"Mus consequat a justo"}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg___3Fjog
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />
                      </React.Fragment>
                    }
                    dollars={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__x26YJ
                        )}
                      >
                        {"150"}
                      </div>
                    }
                    label={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__g5UK4
                        )}
                      >
                        {"Startup"}
                      </div>
                    }
                  />
                </div>
                <div className={classNames(projectcss.all, sty.column__v4Vxa)}>
                  <PriceCard
                    action={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__qtvkX
                        )}
                      >
                        {"Buy pro"}
                      </div>
                    }
                    borders={[]}
                    className={classNames(
                      "__wab_instance",
                      sty.priceCard__nwNb
                    )}
                    description={
                      <React.Fragment>
                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__bRxgS
                          )}
                          description={
                            "Ligula primis mollis sem dignissim semper lectus parturient"
                          }
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__eGups
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__vdVh8
                          )}
                          description={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__h3Rd
                              )}
                            >
                              {"A curabitur dignissim pharetra porta suscipit"}
                            </div>
                          }
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__znpv8
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__xy0Az
                          )}
                          description={
                            "Condimentum diam a et sapien praesent potenti torquent a eros"
                          }
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__sAbko
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__hUguK
                          )}
                          description={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__hFcer
                              )}
                            >
                              {"Conubia in hac eu elementum sodales"}
                            </div>
                          }
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__wis
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />
                      </React.Fragment>
                    }
                    dollars={"350"}
                    label={"Small CMS"}
                    primary={true}
                  />
                </div>
                <div className={classNames(projectcss.all, sty.column___3CuM7)}>
                  <PriceCard
                    action={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__v1X9H
                        )}
                      >
                        {"Buy team"}
                      </div>
                    }
                    borders={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? []
                        : ["flatLeft"]
                    }
                    className={classNames(
                      "__wab_instance",
                      sty.priceCard__qDlCf
                    )}
                    description={
                      <React.Fragment>
                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__tByTg
                          )}
                          description={"Ad nam curae a potenti platea"}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__hokL2
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__hh9Gl
                          )}
                          description={
                            "A adipiscing scelerisque pretium consectetur sem"
                          }
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__ijGBp
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />
                      </React.Fragment>
                    }
                    dollars={"Custom"}
                    label={"Enterprise"}
                  />
                </div>
              </Stack__>
            </Stack__>
          </Section>
          <Section
            data-plasmic-name={"shopBannersSection"}
            data-plasmic-override={overrides.shopBannersSection}
            className={classNames("__wab_instance", sty.shopBannersSection)}
            size={"fullContentWidth"}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__xgym1)}
            >
              <Banner
                className={classNames("__wab_instance", sty.banner__t7Rrv)}
                image={{
                  src: "/plasmic/daply_landing/images/sunglassesMale.jpg",
                  fullWidth: 2851,
                  fullHeight: 1900,
                  aspectRatio: undefined
                }}
                left={
                  <React.Fragment>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__jzxl
                      )}
                    >
                      {"Sunglasses Collection"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__u4LKp
                      )}
                    >
                      {"Get 25% off on selected items"}
                    </div>
                    <Button
                      color2={"link"}
                      endIcon={
                        <ChevronRightIcon
                          className={classNames(projectcss.all, sty.svg__teySy)}
                          role={"img"}
                        />
                      }
                      flat={true}
                      showEndIcon={true}
                      submitsForm={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__pR6S
                        )}
                      >
                        {"Go to collection"}
                      </div>
                    </Button>
                  </React.Fragment>
                }
              />

              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__hxGja)}
              >
                <Banner
                  className={classNames("__wab_instance", sty.banner__byyQ1)}
                  image={{
                    src: "/plasmic/daply_landing/images/sneakers.jpg",
                    fullWidth: 2850,
                    fullHeight: 1900,
                    aspectRatio: undefined
                  }}
                  left={
                    <React.Fragment>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__fnUDp
                        )}
                      >
                        {"Sneakers\nCollection"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___8LvdD
                        )}
                      >
                        {"Get 25% off on selected items"}
                      </div>
                      <Button
                        color2={"link"}
                        endIcon={
                          <ChevronRightIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg___3B7Xo
                            )}
                            role={"img"}
                          />
                        }
                        flat={true}
                        showEndIcon={true}
                        submitsForm={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__wJq0P
                          )}
                        >
                          {"Go to collection"}
                        </div>
                      </Button>
                    </React.Fragment>
                  }
                />

                <Banner
                  className={classNames("__wab_instance", sty.banner__fhzRt)}
                  image={{
                    src: "/plasmic/daply_landing/images/shirtWoman.png",
                    fullWidth: 1834,
                    fullHeight: 2751,
                    aspectRatio: undefined
                  }}
                  left={
                    <React.Fragment>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__m0YC
                        )}
                      >
                        {"Shirts\nCollection"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__p4DMj
                        )}
                      >
                        {"Get 25% off on selected items"}
                      </div>
                      <Button
                        color2={"link"}
                        endIcon={
                          <ChevronRightIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__rcKtu
                            )}
                            role={"img"}
                          />
                        }
                        flat={true}
                        showEndIcon={true}
                        submitsForm={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__kjiYc
                          )}
                        >
                          {"Go to collection"}
                        </div>
                      </Button>
                    </React.Fragment>
                  }
                />
              </Stack__>
            </Stack__>
          </Section>
          <Section
            data-plasmic-name={"logoCloudSection"}
            data-plasmic-override={overrides.logoCloudSection}
            className={classNames("__wab_instance", sty.logoCloudSection)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__mYjn0)}
            >
              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__gdwV)}
                displayHeight={"48px"}
                displayMaxHeight={"none"}
                displayMaxWidth={"none"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"auto"}
                src={{
                  src: "/plasmic/daply_landing/images/loom.svg",
                  fullWidth: 300,
                  fullHeight: 91,
                  aspectRatio: 3.303226
                }}
              />

              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__jq00)}
                displayHeight={"48px"}
                displayMaxHeight={"none"}
                displayMaxWidth={"none"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"auto"}
                src={{
                  src: "/plasmic/daply_landing/images/strapi.svg",
                  fullWidth: 300,
                  fullHeight: 78,
                  aspectRatio: 3.849624
                }}
              />

              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__vvhap)}
                displayHeight={"48px"}
                displayMaxHeight={"none"}
                displayMaxWidth={"none"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"auto"}
                src={{
                  src: "/plasmic/daply_landing/images/segment.svg",
                  fullWidth: 300,
                  fullHeight: 62,
                  aspectRatio: 4.87619
                }}
              />

              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__eiAqk)}
                displayHeight={"48px"}
                displayMaxHeight={"none"}
                displayMaxWidth={"none"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"auto"}
                src={{
                  src: "/plasmic/daply_landing/images/xstate.svg",
                  fullWidth: 300,
                  fullHeight: 94,
                  aspectRatio: 3.2
                }}
              />

              <PlasmicImg__
                alt={""}
                className={classNames(sty.img___22Fk4)}
                displayHeight={"48px"}
                displayMaxHeight={"none"}
                displayMaxWidth={"none"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"auto"}
                src={{
                  src: "/plasmic/daply_landing/images/mapbox.svg",
                  fullWidth: 300,
                  fullHeight: 67,
                  aspectRatio: 4.491228
                }}
              />
            </Stack__>
          </Section>
          <Section
            data-plasmic-name={"faqSection"}
            data-plasmic-override={overrides.faqSection}
            className={classNames("__wab_instance", sty.faqSection)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__k1HeW)}
            >
              <div className={classNames(projectcss.all, sty.freeBox__r44H5)}>
                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2__pdvtb
                  )}
                >
                  {"Common Questions"}
                </h2>
              </div>
            </Stack__>
            {(() => {
              const child$Props = {
                activeKey: generateStateValueProp($state, [
                  "accordion2",
                  "activePanelId"
                ]),
                bordered: false,
                className: classNames("__wab_instance", sty.accordion2),
                disabled: false,
                ghost: false,
                items: (
                  <React.Fragment>
                    <AntdAccordionItem
                      className={classNames(
                        "__wab_instance",
                        sty.accordionItem__oJeGa
                      )}
                      id={1}
                      label2={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__ckD3O
                          )}
                        >
                          {"First Item"}
                        </div>
                      }
                      showArrow={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__n2QXn
                        )}
                      >
                        {"First Children"}
                      </div>
                    </AntdAccordionItem>
                    <AntdAccordionItem
                      className={classNames(
                        "__wab_instance",
                        sty.accordionItem___8W7LJ
                      )}
                      id={2}
                      label2={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__aisrO
                          )}
                        >
                          {"Second Item"}
                        </div>
                      }
                      showArrow={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__kheq5
                        )}
                      >
                        {"Second Children"}
                      </div>
                    </AntdAccordionItem>
                  </React.Fragment>
                ),
                onChange: generateStateOnChangePropForCodeComponents(
                  $state,
                  "activePanelId",
                  ["accordion2", "activePanelId"],
                  AntdAccordion_Helpers
                )
              };
              initializeCodeComponentStates(
                $state,
                [
                  {
                    name: "activePanelId",
                    plasmicStateName: "accordion2.activePanelId"
                  }
                ],
                [],
                AntdAccordion_Helpers ?? {},
                child$Props
              );

              return (
                <AntdAccordion
                  data-plasmic-name={"accordion2"}
                  data-plasmic-override={overrides.accordion2}
                  {...child$Props}
                />
              );
            })()}
            <ParallaxWrapper
              data-plasmic-name={"scrollParallax"}
              data-plasmic-override={overrides.scrollParallax}
              className={classNames("__wab_instance", sty.scrollParallax)}
              previewInEditor={true}
              speed={20}
            >
              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2__kwRyl
                )}
              >
                {"Common Questions"}
              </h2>
              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__rOqn)}
                displayHeight={"auto"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"auto"}
                src={"https://placekitten.com/300/200"}
              />
            </ParallaxWrapper>
          </Section>
          <Section
            data-plasmic-name={"testimonialsSection"}
            data-plasmic-override={overrides.testimonialsSection}
            background={"gray"}
            className={classNames("__wab_instance", sty.testimonialsSection)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns___69OUg)}
            >
              <div className={classNames(projectcss.all, sty.column__qr3Gu)}>
                <Testimonial
                  className={classNames(
                    "__wab_instance",
                    sty.testimonial___7Jm3Y
                  )}
                  image={{
                    src: "/plasmic/daply_landing/images/tracy.png",
                    fullWidth: 500,
                    fullHeight: 500,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column__y3Xk)}>
                <Testimonial
                  className={classNames(
                    "__wab_instance",
                    sty.testimonial__vGc7J
                  )}
                  image={{
                    src: "/plasmic/daply_landing/images/elaine.png",
                    fullWidth: 460,
                    fullHeight: 280,
                    aspectRatio: undefined
                  }}
                  name={"Elaine Benes"}
                  quote={
                    <React.Fragment>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__qvlm5
                        )}
                      >
                        {'"Vestibulum lacinia varius habitant dis aenean.'}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__vtmSv
                        )}
                      >
                        {
                          'A parturient non ultricies a parturient leo a nascetur at consectetur turpis praesent mus ornare nulla posuere vel parturient."'
                        }
                      </div>
                    </React.Fragment>
                  }
                  title={"Editor, Pendant Publishing"}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column__edNav)}>
                <Testimonial
                  className={classNames(
                    "__wab_instance",
                    sty.testimonial__zVaOt
                  )}
                  image={{
                    src: "/plasmic/daply_landing/images/louis.jpg",
                    fullWidth: 2249,
                    fullHeight: 3000,
                    aspectRatio: undefined
                  }}
                  name={"Louis Huang"}
                  quote={
                    '"Purus dis a primis rhoncus blandit velit suspendisse porta at ullamcorper suscipit a scelerisque sed pharetra facilisi vitae."'
                  }
                  title={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__mUCtJ
                      )}
                    >
                      {"Restaurant Owner, Cattleman's Ranch"}
                    </div>
                  }
                />
              </div>
            </Stack__>
          </Section>
          <CallToActionSection
            data-plasmic-name={"callToActionSection"}
            data-plasmic-override={overrides.callToActionSection}
            className={classNames("__wab_instance", sty.callToActionSection)}
            image={{
              src: "/plasmic/daply_landing/images/meeting.jpg",
              fullWidth: 2916,
              fullHeight: 1787,
              aspectRatio: undefined
            }}
          />

          <FooterSection
            data-plasmic-name={"footerSection"}
            data-plasmic-override={overrides.footerSection}
            className={classNames("__wab_instance", sty.footerSection)}
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "navigationBar",
    "signup",
    "headerHeroSection",
    "signUpPrompt",
    "valuePropsSection",
    "pricingSection",
    "shopBannersSection",
    "logoCloudSection",
    "faqSection",
    "accordion2",
    "scrollParallax",
    "testimonialsSection",
    "callToActionSection",
    "footerSection"
  ],
  navigationBar: ["navigationBar", "signup"],
  signup: ["signup"],
  headerHeroSection: ["headerHeroSection", "signUpPrompt"],
  signUpPrompt: ["signUpPrompt"],
  valuePropsSection: ["valuePropsSection"],
  pricingSection: ["pricingSection"],
  shopBannersSection: ["shopBannersSection"],
  logoCloudSection: ["logoCloudSection"],
  faqSection: ["faqSection", "accordion2", "scrollParallax"],
  accordion2: ["accordion2"],
  scrollParallax: ["scrollParallax"],
  testimonialsSection: ["testimonialsSection"],
  callToActionSection: ["callToActionSection"],
  footerSection: ["footerSection"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  navigationBar: typeof NavigationBar;
  signup: typeof Button;
  headerHeroSection: "div";
  signUpPrompt: typeof SignUpPrompt;
  valuePropsSection: typeof Section;
  pricingSection: typeof Section;
  shopBannersSection: typeof Section;
  logoCloudSection: typeof Section;
  faqSection: typeof Section;
  accordion2: typeof AntdAccordion;
  scrollParallax: typeof ParallaxWrapper;
  testimonialsSection: typeof Section;
  callToActionSection: typeof CallToActionSection;
  footerSection: typeof FooterSection;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepage__VariantsArgs;
    args?: PlasmicHomepage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomepage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicHomepage__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicHomepage__ArgProps,
          internalVariantPropNames: PlasmicHomepage__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    navigationBar: makeNodeComponent("navigationBar"),
    signup: makeNodeComponent("signup"),
    headerHeroSection: makeNodeComponent("headerHeroSection"),
    signUpPrompt: makeNodeComponent("signUpPrompt"),
    valuePropsSection: makeNodeComponent("valuePropsSection"),
    pricingSection: makeNodeComponent("pricingSection"),
    shopBannersSection: makeNodeComponent("shopBannersSection"),
    logoCloudSection: makeNodeComponent("logoCloudSection"),
    faqSection: makeNodeComponent("faqSection"),
    accordion2: makeNodeComponent("accordion2"),
    scrollParallax: makeNodeComponent("scrollParallax"),
    testimonialsSection: makeNodeComponent("testimonialsSection"),
    callToActionSection: makeNodeComponent("callToActionSection"),
    footerSection: makeNodeComponent("footerSection"),

    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "Home",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
